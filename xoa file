.

🔎 Dry-run — chỉ LIỆT KÊ, CHƯA XOÁ
# 1) In ra các thư mục site-packages hiện tại (venv/user)
python - <<'PY'
import site, sys
print("Python:", sys.executable)
print("site-packages:", *site.getsitepackages(), sep="\n  ")
print("user-site    :", site.getusersitepackages())
PY

# 2) Liệt kê các gói pip cài HÔM NAY (dựa trên *.dist-info / *.egg-info mới tạo)
TODAY="$(date +%Y-%m-%d)"
for SP in $(python - <<'PY'
import site; print(*site.getsitepackages(), site.getusersitepackages(), sep="\n")
PY
); do
  [ -d "$SP" ] || continue
  echo "=== Scan: $SP ==="
  # các metadata thư mục gói mới hôm nay
  find "$SP" -maxdepth 1 -type d \( -name "*.dist-info" -o -name "*.egg-info" \) -newermt "$TODAY" -print |
  while read D; do
    # lấy tên gói từ METADATA nếu có (chính xác hơn tách tên-thủ-công)
    PKG=$(awk -F': ' '/^Name: /{print $2; exit}' "$D/METADATA" 2>/dev/null || basename "$D" | sed -E 's/\.(dist|egg)-info$//; s/-[0-9].*$//')
    echo "  will uninstall: $PKG   (from $D)"
  done
done

# 3) Liệt kê cache/tệp tải dở của pip trong HÔM NAY
echo "=== pip cache today ==="
find ~/.cache/pip -type f -newermt "$TODAY" -print 2>/dev/null || true

echo "=== partial downloads today (~/.whl.part, .part, .tmp) ==="
find ~ -type f -newermt "$TODAY" \( -name "*.whl.part" -o -name "*.part" -o -name "*.tmp" \) -print 2>/dev/null || true

🧨 Do-it — GỠ & XOÁ THẬT (chỉ hôm nay)
A) Gỡ các gói pip được cài hôm nay
TODAY="$(date +%Y-%m-%d)"
for SP in $(python - <<'PY'
import site; print(*site.getsitepackages(), site.getusersitepackages(), sep="\n")
PY
); do
  [ -d "$SP" ] || continue
  find "$SP" -maxdepth 1 -type d \( -name "*.dist-info" -o -name "*.egg-info" \) -newermt "$TODAY" -print |
  while read D; do
    PKG=$(awk -F': ' '/^Name: /{print $2; exit}' "$D/METADATA" 2>/dev/null || basename "$D" | sed -E 's/\.(dist|egg)-info$//; s/-[0-9].*$//')
    # gỡ bằng pip để xóa sạch file đi kèm
    echo "Uninstalling $PKG ..."
    python -m pip uninstall -y "$PKG" || true
  done
done


Cách này đọc METADATA/Name để lấy đúng tên gói (an toàn hơn tách chuỗi).
Nếu trước đó cài bị dở dang (không có METADATA), pip có thể không gỡ được. Khi đó chuyển sang bước B.

B) Xóa thủ công tàn dư hôm nay (gói cài dở, build tạm, partial)
# Xóa thư mục package/metadata mới tạo hôm nay trong site-packages (tàn dư do cài dở)
for SP in $(python - <<'PY'
import site; print(*site.getsitepackages(), site.getusersitepackages(), sep="\n")
PY
); do
  [ -d "$SP" ] || continue
  find "$SP" -maxdepth 1 -type d -newermt "$TODAY" \
       \( -name "*.dist-info" -o -name "*.egg-info" -o -name "[A-Za-z0-9_]*" \) -exec rm -rf {} + 2>/dev/null
done

# Xóa thư mục build/dist/egg-info tạo hôm nay trong HOME
find ~ -type d -newermt "$TODAY" \( -name "build" -o -name "dist" -o -name "*.egg-info" \) -exec rm -rf {} +

# Xóa file gói (.whl/.tar/.zip/.pth) tải hôm nay
find ~ -type f -newermt "$TODAY" \( -name "*.whl" -o -name "*.tar*" -o -name "*.zip" -o -name "*.pth" \) -delete 2>/dev/null

# Xóa tệp tải dở hôm nay (*.part, *.tmp, *.whl.part)
find ~ -type f -newermt "$TODAY" \( -name "*.whl.part" -o -name "*.part" -o -name "*.tmp" \) -delete 2>/dev/null

# Dọn cache pip (xóa mọi cache — an toàn)
python -m pip cache purge

C) (Tùy chọn) Dọn cache apt hôm nay (KHÔNG gỡ cài đặt apt)
sudo find /var/cache/apt/archives -type f -newermt "$(date +%Y-%m-%d)" -delete

D) Kiểm tra lại
df -h
python - <<'PY'
import pkgutil, sys
print("Python:", sys.executable)
print("Example check — torch present? :", bool(pkgutil.find_loader('torch')))
PY

Ghi
